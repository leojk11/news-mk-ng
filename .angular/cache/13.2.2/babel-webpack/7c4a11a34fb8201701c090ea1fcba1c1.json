{"ast":null,"code":"export function handleServerSideValidation(error, form) {\n  var _a; // if the error isn't with status 422 (Unprocessable Entity) don't do anything\n\n\n  if (error.status !== 422) {\n    return undefined;\n  }\n\n  const unhandledErrors = [];\n  const validationError = (_a = error.error) === null || _a === void 0 ? void 0 : _a.errors;\n  Object.keys(validationError || {}).forEach(element => {\n    const formControl = form.get(element);\n\n    if (formControl) {\n      formControl.setErrors({\n        serverSideError: validationError[element].join('')\n      });\n    } else {\n      // Field is not defined in form but there is a validation error for it, set it globally\n      unhandledErrors.push(validationError[element].join(''));\n    }\n  });\n\n  if (unhandledErrors.length) {\n    return unhandledErrors.join();\n  }\n\n  return undefined;\n}","map":null,"metadata":{},"sourceType":"module"}