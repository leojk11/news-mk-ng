{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/sub-category.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"../../services/category.service\";\nimport * as i6 from \"../../layout/components/page-label/page-label.component\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@fortawesome/angular-fontawesome\";\n\nfunction EditSubCategoryComponent_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const category_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r2.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(category_r2.name);\n  }\n}\n\nfunction EditSubCategoryComponent_small_12_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1, \" Sub category name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditSubCategoryComponent_small_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtemplate(1, EditSubCategoryComponent_small_12_span_1_Template, 2, 0, \"span\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.form.controls.sub_cat.errors == null ? null : ctx_r1.form.controls.sub_cat.errors.required);\n  }\n}\n\nexport let EditSubCategoryComponent = /*#__PURE__*/(() => {\n  class EditSubCategoryComponent {\n    constructor(route, subCategoriesService, fb, toast, router, categoriesService) {\n      this.route = route;\n      this.subCategoriesService = subCategoriesService;\n      this.fb = fb;\n      this.toast = toast;\n      this.router = router;\n      this.categoriesService = categoriesService;\n      this.subCategory = {};\n      this.categories = [];\n      this.form = this.fb.group({\n        category: ['', [Validators.required]],\n        sub_cat: ['', [Validators.required]]\n      });\n      this.submitted = false;\n      this.editIcon = faEdit;\n    }\n\n    ngOnInit() {\n      this.categoriesService.getCategories().subscribe(res => {\n        this.categories = res.categories;\n      });\n      this.route.params.subscribe(params => {\n        this.subCategoriesService.getSingleSubCategory(params.id).subscribe(res => {\n          this.subCategory = res.subCategory[0];\n          this.form.patchValue({\n            category: res.subCategory[0].category,\n            sub_cat: res.subCategory[0].sub_cat\n          }); // this.subCategoriesService.getSubCategoriesFromCategory(res.subCategory[0].category).subscribe(res => {\n          //   console.log(res);\n          // })\n        });\n      });\n    }\n\n    handleSubmit() {\n      this.submitted = true;\n\n      if (this.form.invalid) {\n        this.form.markAllAsTouched();\n        this.toast.error('Form is not valid, please check it again');\n        return;\n      } else {\n        this.subCategoriesService.editSubCategory(this.subCategory._id, this.form.value).subscribe(res => {\n          this.toast.success('Sub category has been edited');\n          this.router.navigateByUrl('/back/sub-categories');\n        }, err => {\n          this.toast.error(err.error.message);\n        });\n      }\n    }\n\n    chooseCategory(event) {\n      console.log(event);\n    }\n\n    isInvalid(form, control) {\n      var _a;\n\n      if (this.submitted && ((_a = form.get(control)) === null || _a === void 0 ? void 0 : _a.errors)) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n  }\n\n  EditSubCategoryComponent.ɵfac = function EditSubCategoryComponent_Factory(t) {\n    return new (t || EditSubCategoryComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SubCategoryService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.ToastrService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i5.CategoryService));\n  };\n\n  EditSubCategoryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditSubCategoryComponent,\n    selectors: [[\"app-edit-sub-category\"]],\n    decls: 16,\n    vars: 5,\n    consts: [[1, \"edit-sub-cat\", \"p-3\"], [3, \"label\"], [1, \"cms-form\", \"mt-4\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"mb-3\"], [1, \"fw-bold\"], [\"formControlName\", \"category\", 1, \"form-select\", 3, \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"formControlName\", \"sub_cat\", \"name\", \"sub_category\", 1, \"form-control\"], [4, \"ngIf\"], [1, \"btn\", \"btn-success\", \"mt-5\", \"add-new-btn\"], [3, \"icon\"], [3, \"value\"], [\"style\", \"color: red\", 4, \"ngIf\"], [2, \"color\", \"red\"]],\n    template: function EditSubCategoryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"app-page-label\", 1);\n        i0.ɵɵelementStart(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function EditSubCategoryComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.handleSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"label\", 4);\n        i0.ɵɵtext(5, \"Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"select\", 5);\n        i0.ɵɵlistener(\"change\", function EditSubCategoryComponent_Template_select_change_6_listener($event) {\n          return ctx.chooseCategory($event.target.value);\n        });\n        i0.ɵɵtemplate(7, EditSubCategoryComponent_option_7_Template, 2, 2, \"option\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3);\n        i0.ɵɵelementStart(9, \"label\", 4);\n        i0.ɵɵtext(10, \"Sub Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 7);\n        i0.ɵɵtemplate(12, EditSubCategoryComponent_small_12_Template, 2, 1, \"small\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 9);\n        i0.ɵɵelement(14, \"fa-icon\", 10);\n        i0.ɵɵtext(15, \" Edit Sub Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"label\", \"Edit Sub Category\" + \" - \" + ctx.subCategory.sub_cat);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.isInvalid(ctx.form, \"sub_cat\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"icon\", ctx.editIcon);\n      }\n    },\n    directives: [i6.PageLabelComponent, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.FormControlName, i7.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i7.NgIf, i8.FaIconComponent],\n    styles: [\"\"]\n  });\n  return EditSubCategoryComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}