{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/posts.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"../../services/sub-category.service\";\nimport * as i6 from \"../../services/category.service\";\nimport * as i7 from \"../../layout/components/page-label/page-label.component\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@fortawesome/angular-fontawesome\";\n\nfunction EditPostComponent_small_7_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1, \" Title name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditPostComponent_small_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtemplate(1, EditPostComponent_small_7_span_1_Template, 2, 0, \"span\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.form.controls.title.errors == null ? null : ctx_r0.form.controls.title.errors.required);\n  }\n}\n\nfunction EditPostComponent_small_12_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1, \" Small title name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditPostComponent_small_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtemplate(1, EditPostComponent_small_12_span_1_Template, 2, 0, \"span\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.form.controls.small_title.errors == null ? null : ctx_r1.form.controls.small_title.errors.required);\n  }\n}\n\nfunction EditPostComponent_small_17_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1, \" Title name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditPostComponent_small_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtemplate(1, EditPostComponent_small_17_span_1_Template, 2, 0, \"span\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.form.controls.source.errors == null ? null : ctx_r2.form.controls.source.errors.required);\n  }\n}\n\nfunction EditPostComponent_option_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const category_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r11.category.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(category_r11.category.name);\n  }\n}\n\nfunction EditPostComponent_option_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const subCategory_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", subCategory_r12.sub_cat);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(subCategory_r12.sub_cat);\n  }\n}\n\nfunction EditPostComponent_small_32_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1, \" Text name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditPostComponent_small_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtemplate(1, EditPostComponent_small_32_span_1_Template, 2, 0, \"span\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.form.controls.text.errors == null ? null : ctx_r5.form.controls.text.errors.required);\n  }\n}\n\nfunction EditPostComponent_div_36_img_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 25);\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"src\", ctx_r14.imgURL, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction EditPostComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtemplate(1, EditPostComponent_div_36_img_1_Template, 1, 1, \"img\", 24);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.imgURL);\n  }\n}\n\nexport let EditPostComponent = /*#__PURE__*/(() => {\n  class EditPostComponent {\n    constructor(postsService, route, fb, toast, subCategoryService, categoryService, router) {\n      this.postsService = postsService;\n      this.route = route;\n      this.fb = fb;\n      this.toast = toast;\n      this.subCategoryService = subCategoryService;\n      this.categoryService = categoryService;\n      this.router = router;\n      this.apiUrl = environment.apiUrl;\n      this.addIcon = faPlusCircle;\n      this.form = this.fb.group({\n        title: ['', [Validators.required]],\n        small_title: ['', [Validators.required]],\n        source: ['', [Validators.required]],\n        category: ['', [Validators.required]],\n        subCat: ['', [Validators.required]],\n        text: ['', [Validators.required]],\n        image: ['']\n      });\n      this.submitted = false;\n      this.post = {};\n      this.showSub = false;\n      this.subCategories = [];\n      this.categories = [];\n      this.message = '';\n      this.fileName = '';\n      this.chosenImage = false;\n    }\n\n    ngOnInit() {\n      this.route.params.subscribe(params => {\n        this.postsService.getSinglePost(params.id).subscribe(res => {\n          this.post = res.singlePost[0];\n          console.log(this.post);\n          this.categoryService.getCategories().subscribe(res => {\n            this.categories = res.categories;\n            console.log(this.categories);\n          });\n          this.subCategoryService.getSubCategoriesFromCategory(res.singlePost[0].category).subscribe(subCategries => {\n            this.subCategories = subCategries;\n          });\n          const post = res.singlePost[0];\n          const {\n            title,\n            small_title,\n            source,\n            category,\n            subCat,\n            text\n          } = post;\n          this.form.patchValue({\n            title: title,\n            small_title: small_title,\n            source: source,\n            category: category,\n            subCat: subCat,\n            text: text\n          });\n          console.log(this.form.value);\n          this.imgURL = `${this.apiUrl}/post-image/${this.post.image}`;\n          this.chosenImage = true;\n        });\n      });\n    }\n\n    handleSubmit() {\n      this.submitted = true;\n\n      if (this.form.invalid) {\n        this.form.markAllAsTouched();\n        this.toast.error('Form is not valid, please check it and try again');\n        return;\n      } else {\n        this.form.value.image = this.fileName;\n        this.postsService.editPost(this.post._id, this.form.value).subscribe(res => {\n          this.toast.success('Post has been edited');\n          this.router.navigateByUrl('/back/posts');\n        }, err => {\n          this.toast.error('Something went wrong');\n        });\n      }\n    }\n\n    isInvalid(form, control) {\n      var _a;\n\n      if (this.submitted && ((_a = form.get(control)) === null || _a === void 0 ? void 0 : _a.errors)) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    onChange(event) {\n      this.subCategoryService.getSubCategoriesFromCategory(event).subscribe(res => {\n        if (res.length > 0) {\n          this.showSub = true;\n          this.subCategories = res;\n        } else if (res.length === 0) {\n          this.showSub = false;\n        }\n      });\n    }\n\n    preview(files) {\n      if (files.length === 0) return;\n      var mimeType = files[0].type;\n\n      if (mimeType.match(/image\\/*/) == null) {\n        this.message = \"Only images are supported.\";\n        return;\n      }\n\n      this.fileName = files[0].name; // this.form.patchValue({ image: files[0].image });\n\n      this.fileToUpload = files[0];\n      var reader = new FileReader();\n      this.imagePath = files;\n      reader.readAsDataURL(files[0]);\n\n      reader.onload = _event => {\n        this.imgURL = reader.result;\n      };\n\n      this.chosenImage = true;\n    }\n\n  }\n\n  EditPostComponent.ɵfac = function EditPostComponent_Factory(t) {\n    return new (t || EditPostComponent)(i0.ɵɵdirectiveInject(i1.PostsService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.ToastrService), i0.ɵɵdirectiveInject(i5.SubCategoryService), i0.ɵɵdirectiveInject(i6.CategoryService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  EditPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditPostComponent,\n    selectors: [[\"app-edit-post\"]],\n    decls: 40,\n    vars: 10,\n    consts: [[1, \"edit-post\", \"p-3\"], [3, \"label\"], [1, \"cms-form\", \"mt-4\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [1, \"fw-bold\"], [\"type\", \"text\", \"formControlName\", \"title\", \"name\", \"title\", 1, \"form-control\"], [4, \"ngIf\"], [1, \"form-group\", \"mt-3\"], [\"type\", \"text\", \"formControlName\", \"small_title\", \"name\", \"small title\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"source\", \"name\", \"source\", 1, \"form-control\"], [\"formControlName\", \"category\", 1, \"form-select\", \"cp\", 3, \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"subCat\", 1, \"form-select\", \"cp\"], [\"name\", \"text\", \"cols\", \"30\", \"rows\", \"10\", \"formControlName\", \"text\", \"contenteditable\", \"true\", \"role\", \"textbox\", \"aria-multiline\", \"true\", \"spellcheck\", \"true\", \"autocorrect\", \"true\", 1, \"form-control\"], [1, \"input-group\", \"mt-3\"], [\"type\", \"file\", \"aria-label\", \"Upload\", \"formControlName\", \"image\", \"accept\", \"image/*\", 1, \"form-control\", 3, \"change\"], [\"file\", \"\"], [\"class\", \"image-preview mt-3\", 4, \"ngIf\"], [1, \"btn\", \"btn-success\", \"mt-5\", \"add-new-btn\"], [3, \"icon\"], [\"style\", \"color: red\", 4, \"ngIf\"], [2, \"color\", \"red\"], [3, \"value\"], [1, \"image-preview\", \"mt-3\"], [\"height\", \"200\", 3, \"src\", 4, \"ngIf\"], [\"height\", \"200\", 3, \"src\"]],\n    template: function EditPostComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r15 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"app-page-label\", 1);\n        i0.ɵɵelementStart(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function EditPostComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.handleSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"label\", 4);\n        i0.ɵɵtext(5, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 5);\n        i0.ɵɵtemplate(7, EditPostComponent_small_7_Template, 2, 1, \"small\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 7);\n        i0.ɵɵelementStart(9, \"label\", 4);\n        i0.ɵɵtext(10, \"Small title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 8);\n        i0.ɵɵtemplate(12, EditPostComponent_small_12_Template, 2, 1, \"small\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 7);\n        i0.ɵɵelementStart(14, \"label\", 4);\n        i0.ɵɵtext(15, \"Source\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 9);\n        i0.ɵɵtemplate(17, EditPostComponent_small_17_Template, 2, 1, \"small\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 7);\n        i0.ɵɵelementStart(19, \"label\", 4);\n        i0.ɵɵtext(20, \"Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"select\", 10);\n        i0.ɵɵlistener(\"change\", function EditPostComponent_Template_select_change_21_listener($event) {\n          return ctx.onChange($event.target.value);\n        });\n        i0.ɵɵtemplate(22, EditPostComponent_option_22_Template, 2, 2, \"option\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 7);\n        i0.ɵɵelementStart(24, \"label\", 4);\n        i0.ɵɵtext(25, \"Sub Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"select\", 12);\n        i0.ɵɵtemplate(27, EditPostComponent_option_27_Template, 2, 2, \"option\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 7);\n        i0.ɵɵelementStart(29, \"label\", 4);\n        i0.ɵɵtext(30, \"Text\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"textarea\", 13);\n        i0.ɵɵtemplate(32, EditPostComponent_small_32_Template, 2, 1, \"small\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 14);\n        i0.ɵɵelementStart(34, \"input\", 15, 16);\n        i0.ɵɵlistener(\"change\", function EditPostComponent_Template_input_change_34_listener() {\n          i0.ɵɵrestoreView(_r15);\n\n          const _r6 = i0.ɵɵreference(35);\n\n          return ctx.preview(_r6.files);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(36, EditPostComponent_div_36_Template, 2, 1, \"div\", 17);\n        i0.ɵɵelementStart(37, \"button\", 18);\n        i0.ɵɵelement(38, \"fa-icon\", 19);\n        i0.ɵɵtext(39, \" Edit Post\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"label\", \"Edit post\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.isInvalid(ctx.form, \"title\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.isInvalid(ctx.form, \"small_title\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.isInvalid(ctx.form, \"source\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.subCategories);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.isInvalid(ctx.form, \"text\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.chosenImage);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"icon\", ctx.addIcon);\n      }\n    },\n    directives: [i7.PageLabelComponent, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i8.NgIf, i3.SelectControlValueAccessor, i8.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i9.FaIconComponent],\n    styles: [\"\"]\n  });\n  return EditPostComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}